// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Week {
  id Int @id @default(autoincrement())
  hours Float @default(0) 

  days Day[]

  @@map("weeks")
}

model Day {
  id Int @id @default(autoincrement())
  hours Float @default(0) 
  date DateTime @default(now())
  name String 

  week Int
  Week Week? @relation(fields: [week], references: [id])

  tarefas Task[]
  @@map("days")
}

model Task {
  id Int @id @default(autoincrement())
  title String
  desc String 
  primeira_hora String
  ultima_hora String

  hours Float

  day Int
  Day Day? @relation(fields: [day], references: [id])

  categorie Int
  Categorie Categorie? @relation(fields: [categorie], references: [id])
  
  user_id String
  User User? @relation(fields: [user_id], references: [id])

  completed Boolean @default(false)

  @@map("tasks")
}

model Categorie {

  id Int @id @default(autoincrement())
  title String
  color String

  task Task[]

  user_id String
  User User? @relation(fields: [user_id], references: [id])

  @@map("categories")

}

model Account {
  id                String  @id @default(uuid())
  userId            String  
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? 
  access_token      String? 
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? 
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String   
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  tasks Task[]
  categories Categorie[]
}

model VerificationToken {
  identifier String   @id @default(uuid())
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}